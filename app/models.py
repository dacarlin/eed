import io
import base64
from numpy import linspace
from pandas import read_csv
from django.db.models import *
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from django.forms import ModelForm, ValidationError

class Entry(Model):
  # meta
  date = DateTimeField(auto_now_add=True)
  public = BooleanField(default=False)
  
  # bio
  sys = CharField(max_length=10)
  mutant = CharField(max_length=199)
  yyield = FloatField()
  substrate = CharField(max_length=199)
  cid = CharField(max_length=20)
  
  # const
  eff, err3 = FloatField(), FloatField()
  kcat, err1 = FloatField(), FloatField()
  km, err2 = FloatField(), FloatField()
  
  # file-like 
  lin, mm = TextField(), TextField()
  pdb = TextField()
  raw = TextField()

def fit(data):
  def mm(S, kcat, km): return kcat*S/(km+S)
  params, cov = curve_fit( mm, data['s'], data['kobs'], p0=(100,0.005) )
  residuals = mm(data['s'],params[0],params[1]) - data['kobs']
  fres = sum(residuals**2)
  error = [ abs(cov[i][i])**0.5 for i in range(len(params)) ]

  def lm(S, m, b): return m*S+b
  lparams, lcov = curve_fit( lm, data['s'], data['kobs'], p0=(1000,0) )
  lresiduals = lm(data['s'],params[0],params[1]) - data['kobs']
  lfres = sum(lresiduals**2)
  lerror = [ abs(lcov[i][i])**0.5 for i in range(len(lparams)) ]
  
  if lfres < fres:
    kcat, err1, km, err2 = ['NA' * 4]
    eff, err3 = '', ''
    xdata = linspace(0,max(data['s']))
    ydata = [  lm(x,params[0],params[1]) for x in xdata ]

  else:
    kcat, km  = params
    err1, err2 = error
    eff, err3 = (kcat/km, kcat/km*(err1/kcat)**2+(err2/km)**2)
    xdata = linspace(0,max(data['s']))
    ydata = [  mm(x,params[0],params[1]) for x in xdata ]

  stream = io.BytesIO()
  plt.figure()
  plt.grid(True)
  plt.xlabel('Substrate concentration (M)')
  plt.ylabel('Rate observed (M/s)')
  plt.plot(xdata,ydata)
  plt.scatter(data['s'], data['kobs'])
  plt.savefig(stream, format='png')
  stream.seek(0)
  linear_plot = base64.b64encode(stream.read())
  mm_plot = base64.b64encode(stream.read())

  return {  'substrate': '4-nitrophenyl-beta-D-glucoside',
            'cid' : '92930',
            'yyield': 1.02,
            'kcat': kcat, 'err1': err1, 
            'km': km, 'err2': err2, 
            'eff': eff, 'err3': err3,
            'linear_plot': linear_plot, 'mm_plot': mm_plot }

class DataEntry(Model):
  example = """plate,sample,yield,dilution,well,maxv,kobs,s,correction
22,r240a,1.108,0.01,b1,6.27e-01,5.13e+03,0.01875,3.83e-07
22,r240a,1.108,0.01,c1,2.86e-01,2.34e+03,0.00469,2.90e-07
22,r240a,1.108,0.01,d1,9.65e-02,7.89e+02,0.00117,2.78e-07
22,r240a,1.108,0.01,e1,2.81e-02,2.30e+02,0.00029,1.57e-07
22,r240a,1.108,0.01,f1,7.60e-03,6.22e+01,0.00007,4.12e-07
22,r240a,1.108,0.01,g1,1.95e-03,1.60e+01,0.00002,3.65e-07
22,r240a,1.108,0.01,h1,0.00e+00,0.00e+00,0.00000,4.26e-07
22,r240a,1.108,0.01,a2,1.07e+00,8.79e+03,0.07500,4.81e-07
22,r240a,1.108,0.01,b2,6.21e-01,5.08e+03,0.01875,3.83e-07
22,r240a,1.108,0.01,c2,2.98e-01,2.44e+03,0.00469,2.90e-07
22,r240a,1.108,0.01,d2,9.65e-02,7.90e+02,0.00117,2.78e-07
22,r240a,1.108,0.01,e2,2.99e-02,2.45e+02,0.00029,1.57e-07
22,r240a,1.108,0.01,f2,7.20e-03,5.89e+01,0.00007,4.12e-07
22,r240a,1.108,0.01,g2,2.15e-03,1.76e+01,0.00002,3.65e-07
22,r240a,1.108,0.01,h2,-1.95e-17,-1.59e-13,0.00000,4.26e-07
22,r240a,1.108,0.01,a3,1.10e+00,8.96e+03,0.07500,4.81e-07
22,r240a,1.108,0.01,b3,6.31e-01,5.16e+03,0.01875,3.83e-07
22,r240a,1.108,0.01,c3,3.06e-01,2.50e+03,0.00469,2.90e-07
22,r240a,1.108,0.01,d3,9.86e-02,8.06e+02,0.00117,2.78e-07
22,r240a,1.108,0.01,e3,2.67e-02,2.18e+02,0.00029,1.57e-07
22,r240a,1.108,0.01,f3,6.70e-03,5.48e+01,0.00007,4.12e-07
22,r240a,1.108,0.01,g3,2.00e-03,1.64e+01,0.00002,3.65e-07
22,r240a,1.108,0.01,h3,0.00e+00,0.00e+00,0.00000,4.26e-07
25,e222a,0.29,0.01,a7,2.24e-03,7.00e+01,0.07500,4.81e-07
25,e222a,0.29,0.01,b7,2.94e-03,9.20e+01,0.01875,3.83e-07
25,e222a,0.29,0.01,c7,3.18e-03,9.93e+01,0.00469,2.90e-07
25,e222a,0.29,0.01,d7,1.66e-03,5.19e+01,0.00117,2.78e-07
25,e222a,0.29,0.01,e7,7.94e-04,2.48e+01,0.00029,1.57e-07
25,e222a,0.29,0.01,f7,2.19e-04,6.84e+00,0.00007,4.12e-07
25,e222a,0.29,0.01,g7,7.82e-05,2.44e+00,0.00002,3.65e-07
25,e222a,0.29,0.01,h7,0.00e+00,0.00e+00,0.00000,4.26e-07
25,e222a,0.29,0.01,a8,2.26e-03,7.08e+01,0.07500,4.81e-07
25,e222a,0.29,0.01,b8,2.87e-03,8.97e+01,0.01875,3.83e-07
25,e222a,0.29,0.01,c8,3.18e-03,9.93e+01,0.00469,2.90e-07
25,e222a,0.29,0.01,d8,1.77e-03,5.53e+01,0.00117,2.78e-07
25,e222a,0.29,0.01,e8,7.70e-04,2.41e+01,0.00029,1.57e-07
25,e222a,0.29,0.01,f8,3.81e-04,1.19e+01,0.00007,4.12e-07
25,e222a,0.29,0.01,g8,7.76e-05,2.43e+00,0.00002,3.65e-07
25,e222a,0.29,0.01,h8,4.37e-18,1.37e-13,0.00000,4.26e-07
25,e222a,0.29,0.01,a9,2.29e-03,7.15e+01,0.07500,4.81e-07
25,e222a,0.29,0.01,b9,2.95e-03,9.24e+01,0.01875,3.83e-07
25,e222a,0.29,0.01,c9,3.29e-03,1.03e+02,0.00469,2.90e-07
25,e222a,0.29,0.01,d9,1.72e-03,5.36e+01,0.00117,2.78e-07
25,e222a,0.29,0.01,e9,7.21e-04,2.25e+01,0.00029,1.57e-07
25,e222a,0.29,0.01,f9,2.16e-04,6.76e+00,0.00007,4.12e-07
25,e222a,0.29,0.01,g9,7.82e-05,2.44e+00,0.00002,3.65e-07
25,e222a,0.29,0.01,h9,4.03e-18,1.26e-13,0.00000,4.26e-07
25,e353a,0.56,0.1,a10,1.05e-04,1.69e-01,0.07500,4.81e-07
25,e353a,0.56,0.1,b10,1.43e-05,2.31e-02,0.01875,3.83e-07
25,e353a,0.56,0.1,c10,1.27e-05,2.06e-02,0.00469,2.90e-07
25,e353a,0.56,0.1,d10,3.23e-06,5.23e-03,0.00117,2.78e-07
25,e353a,0.56,0.1,e10,2.53e-06,4.10e-03,0.00029,1.57e-07
25,e353a,0.56,0.1,f10,3.87e-06,6.26e-03,0.00007,4.12e-07
25,e353a,0.56,0.1,g10,5.14e-06,8.33e-03,0.00002,3.65e-07
25,e353a,0.56,0.1,h10,2.67e-05,4.32e-02,0.00000,4.26e-07
25,e353a,0.56,0.1,a11,1.13e-04,1.83e-01,0.07500,4.81e-07
25,e353a,0.56,0.1,b11,2.55e-05,4.13e-02,0.01875,3.83e-07
25,e353a,0.56,0.1,c11,1.21e-05,1.96e-02,0.00469,2.90e-07
25,e353a,0.56,0.1,d11,3.76e-06,6.09e-03,0.00117,2.78e-07
25,e353a,0.56,0.1,e11,3.65e-06,5.91e-03,0.00029,1.57e-07
25,e353a,0.56,0.1,f11,5.08e-06,8.22e-03,0.00007,4.12e-07
25,e353a,0.56,0.1,g11,2.83e-06,4.58e-03,0.00002,3.65e-07
25,e353a,0.56,0.1,h11,1.21e-17,1.96e-14,0.00000,4.26e-07
25,e353a,0.56,0.1,a12,7.15e-05,1.16e-01,0.07500,4.81e-07
25,e353a,0.56,0.1,b12,2.55e-05,4.12e-02,0.01875,3.83e-07
25,e353a,0.56,0.1,c12,8.92e-06,1.44e-02,0.00469,2.90e-07
25,e353a,0.56,0.1,d12,6.65e-06,1.08e-02,0.00117,2.78e-07
25,e353a,0.56,0.1,e12,2.89e-06,4.67e-03,0.00029,1.57e-07
25,e353a,0.56,0.1,f12,1.75e-06,2.83e-03,0.00007,4.12e-07
25,e353a,0.56,0.1,g12,7.73e-06,1.25e-02,0.00002,3.65e-07
25,e353a,0.56,0.1,h12,-5.52e-18,-8.94e-15,0.00000,4.26e-07
3,wt4,1.977,0.01,a10,1.84e-01,844.140632,0.07500,4.81e-07
3,wt4,1.977,0.01,b10,1.41e-01,645.227622,0.01875,3.83e-07
3,wt4,1.977,0.01,c10,9.31e-02,426.722947,0.00469,2.90e-07
3,wt4,1.977,0.01,d10,3.37e-02,154.396036,0.00117,2.78e-07
3,wt4,1.977,0.01,e10,9.80e-03,44.925519,0.00029,1.57e-07
3,wt4,1.977,0.01,f10,2.66e-03,12.195816,0.00007,4.12e-07
3,wt4,1.977,0.01,g10,6.36e-04,2.918324,0.00002,3.65e-07
3,wt4,1.977,0.01,h10,-3.46e-17,-0.000000,0.00000,4.26e-07
3,wt4,1.977,0.01,a11,1.87e-01,856.086267,0.07500,4.81e-07
3,wt4,1.977,0.01,b11,1.38e-01,633.840600,0.01875,3.83e-07
3,wt4,1.977,0.01,c11,8.40e-02,385.046495,0.00469,2.90e-07
3,wt4,1.977,0.01,d11,3.30e-02,151.299831,0.00117,2.78e-07
3,wt4,1.977,0.01,e11,8.57e-03,39.319557,0.00029,1.57e-07
3,wt4,1.977,0.01,f11,2.26e-03,10.347544,0.00007,4.12e-07
3,wt4,1.977,0.01,g11,5.41e-04,2.479186,0.00002,3.65e-07
3,wt4,1.977,0.01,h11,1.52e-05,0.069484,0.00000,4.26e-07
3,wt4,1.977,0.01,a12,1.93e-01,886.901021,0.07500,4.81e-07
3,wt4,1.977,0.01,b12,1.50e-01,687.584999,0.01875,3.83e-07
3,wt4,1.977,0.01,c12,8.83e-02,405.088435,0.00469,2.90e-07
3,wt4,1.977,0.01,d12,3.38e-02,155.127007,0.00117,2.78e-07
3,wt4,1.977,0.01,e12,5.46e-03,25.016988,0.00029,1.57e-07
3,wt4,1.977,0.01,f12,2.47e-03,11.342554,0.00007,4.12e-07
3,wt4,1.977,0.01,g12,6.38e-04,2.926662,0.00002,3.65e-07
3,wt4,1.977,0.01,h12,1.94e-05,0.088939,0.00000,4.26e-07
"""
  
  csv = TextField(default=example)

class DataEntryForm(ModelForm):
  class Meta:
     model = DataEntry

  def process(self):
    data = read_csv(io.StringIO(self.cleaned_data['csv']))
    # should definitely try to clean up data here, check for S versus s, etc.
    return data.groupby(by='sample').apply(fit).to_dict()
    